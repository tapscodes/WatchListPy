name: Build WatchList Executable

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PySide6

      - name: Build executable
        run: |
          pyinstaller watchlist.pyw --name=WatchList --onefile --windowed
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            mv dist/WatchList dist/WatchListLinux
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv dist/WatchList.exe dist/WatchListWindows.exe
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            mv dist/WatchList dist/WatchListMacOS
          fi

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: WatchList-${{ matrix.os == 'ubuntu-latest' && 'linux' || (matrix.os == 'windows-latest' && 'windows' || 'macos') }}
          path: |
            dist/WatchListLinux
            dist/WatchListMacOS
            dist/WatchListWindows.exe

  release:
    name: Attach executables to GitHub Release
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts for debug
        run: ls -R artifacts

      - name: Upload assets to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/WatchListLinux
            artifacts/**/WatchListMacOS
            artifacts/**/WatchListWindows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
